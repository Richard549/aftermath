#!/bin/sh

. $(dirname "$0")/lib.sh

print_usage() {
    echo "Usage: $0 [OPTION]... header_file"
    echo "Checks if a header file has hidden dependencies towards other header files."
    echo "The script generates a C file that includes the header and then copiles the"
    echo "file."
    echo
    echo "Options:"
    echo "  -v, --verbose              Verbose output"
    echo "  -vv, --very-verbose        Show commands and compiler outpout"
    echo
    echo "Exit status:"
    echo " 0 No errors during compilation"
    echo " 1 The generated C file did not compile successfully"
    exit 0
}

[ -d ".git" ] || die "Please run this script from the main directory"

FLAGS=""

while [ $# -ne 0 ]
do
    case "$1" in
	-v|--verbose)
	    VERBOSE="true"
	    ;;
	-vv|--very-verbose)
	    VERBOSE="true"
	    VERY_VERBOSE="true"
	    ;;
	-*)
	    die "Unknown flag \"$1\". Aborting."
	    ;;
	*)
	    HEADER="$1"
	    ;;
    esac

    shift
done

[ ! -z "$HEADER" ] || die "Please specify the header file to check."

ABS_HEADER=$(readlink -f "$HEADER")

[ -f "$ABS_HEADER" ] || die "Could not find $HEADER."

TMPFILE_C=$(mktemp "build-tmp/check-headerXXXXXX.c")
TMPFILE_E=$(mktemp "build-tmp/check-headerXXXXXX")
TMPFILE_L=$(mktemp "build-tmp/check-headerXXXXXX.log")

echo_verbose_n "Checking $HEADER... "
mkdir -p "build-tmp/"

echo "#include \"$ABS_HEADER\"" > "$TMPFILE_C"
echo >> "$TMPFILE_C"
echo "int main(int argc, char** argv) { return 0; }" >> "$TMPFILE_C"
echo >> "$TMPFILE_C"

[ "x$VERY_VERBOSE" = "xtrue" ] && echo "@CC@ @CHECK_HEADER_CFLAGS@ -o \"$TMPFILE_E\" \"$TMPFILE_C\""

@CC@ @CHECK_HEADER_CFLAGS@ -o "$TMPFILE_E" "$TMPFILE_C" > "$TMPFILE_L" 2>&1
RET=$?

if [ ! $RET -eq 0 ]
then
    echo_verbose "FAILED!"
    cat "$TMPFILE_L"
else
    echo_verbose "done."
fi

rm "$TMPFILE_E" "$TMPFILE_C" "$TMPFILE_L"

exit $RET
